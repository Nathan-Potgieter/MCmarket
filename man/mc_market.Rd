% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc_market.R
\name{mc_market}
\alias{mc_market}
\title{mc_market}
\usage{
mc_market(
  corr,
  N = 100,
  k = 252,
  mv_dist = "t",
  mv_df = 3,
  clayton_param = 4,
  marginal_dist = "norm",
  marginal_dist_model = NULL,
  ts_model = NULL,
  list = TRUE
)
}
\arguments{
\item{N}{a positive integer indicating the number of markets to simulate.}

\item{list}{a logical value indicating whether the output should be a list of tibbles or a single long tibble (see return).
Due to memory issues associated with list = FALSE, list = TRUE is recommend for N > 500. List = FALSE is
best used for tidy output that can easily be plotted with ggplot2 (see example).}
}
\value{
if list = TRUE (default), a list of length N with each entry containing a tidy tibble with a  date,
Asset and Return column. Else if list = FALSE a single tidy tibble with date, Universe, Asset and Return columns.
}
\description{
This function performs a Monte Carlo simulation by iterating over the the sim_market function N times.
It is intended for users who are not comfortable using the purrr::map functions.
}
\note{
(1) see ?sim_market for information on the other parameters.

(2) See examples under sim_market for instructions on how to add an on screen progress bar when performing
the Monte Carlo simulation, this is recommended for simulations with N >1000 since they can take a number of
minuets to complete.
}
\examples{

\dontrun{

library(tidyverse)

### creating a correlation matrix to use as input in sim_asset_market
corr <- gen_corr(D = 20, clusters = "none")

### simulating 550 periods of returns across 50 assets and 100 universes
set.seed(12542)
market_data <- sim_asset_market(corr,
                                k = 550,
                                mv_dist = "norm",
                                marginal_dist = "norm",
                                ts_model = list(mu = 0.000002,
                                                omega = 0.00005,
                                                alpha = 0.098839,
                                                beta = 0.899506,
                                                ar = 0.063666,
                                                ma = NULL,
                                                gamma = 0.12194,
                                                delta = 1.85))

 ### Visualizing the market
 market_data \%>\% group_by(Asset) \%>\%
 mutate(cum_ret = 100*cumprod(1 + Return)) \%>\%
         ggplot() +
         geom_line(aes(x = date, y = cum_ret, color = Asset)) +
         facet_wrap(~Asset) +
         theme(legend.position = "none")

}
}
